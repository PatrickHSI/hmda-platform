include "serialization.conf"

akka.persistence.query.journal.id = "cassandra-query-journal"
akka.test.timefactor = 10.0
akka.http.server.preview.enable-http2 = on

akka.http.server.request-timeout = 48 seconds
akka.http.max-open-requests = 512

hmda {
  loader.parallelism = 4
  http {
    timeout = 38
  }
  actor {
    timeout = 38
  }

  rules {
    yearly-filing {
      years-allowed = "2018,2019,2020"
      years-allowed = ${?RULES_YEARLY_FILING_YEARS_ALLOWED}
    }

    quarterly-filing {
      years-allowed = "2020"
      years-allowed = ${?RULES_QF_FILING_YEARS_ALLOWED}

      q1 {
        start = "April 01"
        start = ${?RULES_QF_Q1_START}

        end = "June 30"
        end = ${?RULES_QF_Q1_END}
      }

      q2 {
        start = "July 01"
        start = ${?RULES_QF_Q2_START}

        end = "September 30"
        end = ${?RULES_QF_Q2_END}
      }

      q3 {
        start = "October 01"
        start = ${?RULES_QF_Q3_START}

        end = "December 31"
        end = ${?RULES_QF_Q3_END}
      }
    }
  }

  filing {
    current = 2020
    current = ${?CURRENT_YEAR}

    parser.validValues.filename = "parserFieldValidValues.txt"
    2018 {
      ts.length = 15
      lar.length = 110
      edits.descriptions.filename = "2018EditsDescriptions.txt"
      edits.descriptions.filename = ${?EDIT_DESCRIPTIONS_FILENAME}
      year = 2018
    }
    2019 {
      ts.length = 15
      lar.length = 110
      edits.descriptions.filename = "2019EditsDescriptions.txt"
      edits.descriptions.filename = ${?EDIT_DESCRIPTIONS_FILENAME_2019}
      year = 2019
    }
    2020 {
      ts.length = 15
      lar.length = 110
      edits.descriptions.filename = "2020EditsDescriptions.txt"
      edits.descriptions.filename = ${?EDIT_DESCRIPTIONS_FILENAME_2019}
      year = 2020
    }
    2020Quarter {
      ts.length = 15
      lar.length = 110
      edits.descriptions.filename = "2020QuarterlyEditsDescriptions.txt"
      edits.descriptions.filename = ${?EDIT_DESCRIPTIONS_FILENAME_2020_Q}
      year = 2020
    }
    2021 {
      ts.length = 15
      lar.length = 110
      edits.descriptions.filename = "2021EditsDescriptions.txt"
      edits.descriptions.filename = ${?EDIT_DESCRIPTIONS_FILENAME_2019}
      year = 2021
    }
    2021Quarter {
      ts.length = 15
      lar.length = 110
      edits.descriptions.filename = "2021QuarterlyEditsDescriptions.txt"
      edits.descriptions.filename = ${?EDIT_DESCRIPTIONS_FILENAME_2020_Q}
      year = 2020
    }
  }

  census {
    fields {
      2018 {
        filename = "census_2018_MSAMD_name.txt"
        filename = ${?2018_CENSUS_FILENAME}
      }
      2019 {
        filename = "ffiec_census_2019.txt"
        filename = ${?2019_CENSUS_FILENAME}
      }
      2020 {
        filename = "ffiec_census_2020.txt"
        filename = ${?2020_CENSUS_FILENAME}
      }
    }
  }

  countyLoanLimit {
    2018 {
      fields.filename = "FullCountyLoanLimitList2018.txt"
      fields.filename = ${?COUNTY_LOAN_LIMIT_FILENAME}
    }
    2019 {
      fields.filename = "FullCountyLoanLimitList2019.txt"
      fields.filename = ${?COUNTY_LOAN_LIMIT_FILENAME}
    }
    2020 {
      fields.filename = "FullCountyLoanLimitList2020.txt"
      fields.filename = ${?COUNTY_LOAN_LIMIT_FILENAME}
    }
  }

  kafka {
    topics {
      institutionTopic = "institution"
      institutionTopic = ${?KAFKA_INSTITUTIONS_TOPIC}
      signTopic = "hmda-sign"
      signTopic = ${?KAFKA_SIGN_TOPIC}
      modifiedLarTopic = "hmda-modified-lar"
      modifiedLarTopic = ${?KAFKA_MODIFIED_LAR_TOPIC}
      irsTopic = "hmda-irs"
      irsTopic = ${?KAFKA_IRS_TOPIC}
      analyticsTopic = "hmda-analytics"
      analyticsTopic = ${?KAFKA_ANALYTICS_TOPIC}
      disclosureTopic = "hmda-spark-disclosure"
      disclosureTopic = ${?KAFKA_DISCLOSURE_TOPIC}
      adTopic = "hmda-spark-ad"
      adTopic = ${?KAFKA_AD_TOPIC}
      emailTopic = "hmda-email"
      emailTopic = ${?KAFKA_EMAIL_TOPIC}
    }
    groups {
      emailGroup = "email-group"
      emailGroup = ${?KAFKA_EMAIL_GROUP}
      modifiedLarGroup = "modified-lar-group"
      modifiedLarGroup = ${?KAFKA_MODIFIED_LAR_GROUP}
      analyticsGroup = "analytics-group"
      analyticsGroup = ${?KAFKA_ANALYTICS_GROUP}
      irsGroup = "irs-group"
      irsGroup = ${?KAFKA_IRS_GROUP}
      institutionsGroup = "institutions-group"
      institutionsGroup = ${?KAFKA_INSTITUTIONS_GROUP}
      submissionErrorsGroup = "triggered-quality-edits-group"
      submissionErrorsGroup = ${?TRIGGERED_QUALITY_EDITS_GROUP}
    }
  }
}

dbconfig {
  host = "192.168.99.100"
  host = ${?PG_HOST}
  port = 5432
  port = ${?PG_PORT}
  database = "hmda"
  database = ${?PG_DATABASE}
  user = "postgres"
  user = ${?PG_USER}
  password = "postgres"
  password = ${?PG_PASSWORD}
  ssl = "require"
  ssl = ${?PG_SSL}
  additionalConfig="ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory"
  additionalConfig=${?PG_ADDCONFIG}
}

db {
  profile = "slick.jdbc.PostgresProfile$"

  db {
    profile = slick.jdbc.PostgresProfile
    url = "jdbc:postgresql://"${dbconfig.host}":"${dbconfig.port}"/"${dbconfig.database}"?user="${dbconfig.user}"&password="${dbconfig.password}"&sslmode="${dbconfig.ssl}"&"${dbconfig.additionalConfig}
    url = ${?JDBC_URL}
    numThreads = 4
    queueSize = 10
    connectionTimeout = 20000
    validationTimeout = 10000
  }
}

keycloak {
  realm = "hmda2"
  client.id = "hmda2-api"
  client.id = ${?KEYCLOAK_HMDA_API_CLIENT_ID}
  public.key.id = "AYUeqDHLF_GFsZYOSMXzhBT4zyQS--KiEmBFvMzJrBA"
  public.key = ${?KEYCLOAK_PUBLIC_KEY_ID}
  auth.server.url = "http://192.168.99.100:31752/auth/"
  auth.server.url = ${?KEYCLOAK_AUTH_URL}
  hmda.admin.role = "hmda-admin"
  hmda.admin.role = ${?KEYCLOAK_HMDA_ADMIN_ROLE}
}

filter {
  bank-filter-list="BANK1LEIFORTEST12345,BANK3LEIFORTEST12345,BANK4LEIFORTEST12345,999999LE3ZOZXUS7W648,28133080042813308004,B90YWS6AFX2LGWOXJ1LD"
  bank-filter-list=${?BANK_FILTER_LIST}
  lou-filter-list = "4469000001AVO26P9X86,9504003253F6C21EE978,5493001KJTIIGC8Y1R12,39120001KULK7200U106,EVK05KS7XY1DEII3R011,029200067A7K6CH0H586,097900BEFH0000000217,315700LK78Z7C0WMIL03,959800R2X69K6Y6MX775,254900LXHEVKYGERER05,529900F6BNUR3RJ2WH29,52990034RLKT0WSOAM90,5299000J2N45DDNE4Y28,815600EAD78C57FCE690,815600F58F7382929F40,969500Q2MA9VBQ8BG884,48510000JZ17NWGUA510,724500A93Z8V1MJK5349,259400L3KBYEVNHEJF55,335800FVH4MOKZS9VH40,213800WAVVOPS85N2205,222100T6ICDIY8V4VX70,506700LOLO7M6V0E4247,743700OO8O2N3TQKJC81,254900PMALKJRL1YGQ18,558600FNC30A8J9EGQ54,378900F4A0A690EA6735,635400DZBUIMTBCXGA12,529900T8BM49AURSDO55,894500IIP432AHQ64V02,7478000050A040C0D041,789000TVSB96MCOKSB52,253400M18U5TB02TW421,300300KDIZ11PV2GH547,353800279ADEFGKNTV65,9884008RRMX1X5HV6625"
  lou-filter-list = ${?LOU_FILTER_LIST}
  banned-domains-list=""
  banned-domains-list= ${?BANNED_DOMAINS_LIST}

}